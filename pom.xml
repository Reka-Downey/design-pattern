<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>org.junbin.design-pattern</groupId>
    <artifactId>parent</artifactId>
    <packaging>pom</packaging>
    <version>1.0-SNAPSHOT</version>

    <modules>
        <module>simple-factory</module>
        <module>factory-method</module>
        <module>factory-method-reflection</module>
        <module>singleton</module>
        <module>builder</module>
        <module>abstract-factory</module>
        <module>immutable-builder</module>
        <module>clazz-adapter</module>
        <module>object-adapter</module>
        <module>prototype</module>
    </modules>

    <name>parent Maven Webapp</name>
    <url>http://maven.apache.org</url>

    <properties>
        <!-- 设置文件编码为UTF-8，这样控制台的Maven输出就不会乱码了 -->
        <argLine>-Dfile.encoding=UTF-8</argLine>
        <!-- 设置源代码文件编码为UTF-8 -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- 设置编译器版本为1.8 -->
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <maven.compiler.compilerVersion>1.8</maven.compiler.compilerVersion>
        <!-- 设置Spring相关产品的版本号 -->
        <spring.version>4.1.7.RELEASE</spring.version>
        <!-- 设置mybatis版本号 -->
        <mybatis.version>3.3.0</mybatis.version>
    </properties>

    <dependencies>

        <!-- 单元测试 -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
        <!--<dependency>-->
            <!--<groupId>org.easymock</groupId>-->
            <!--<artifactId>easymock</artifactId>-->
            <!--<version>3.4</version>-->
        <!--</dependency>-->
        <!--<dependency>-->
            <!--<groupId>org.dbunit</groupId>-->
            <!--<artifactId>dbunit</artifactId>-->
            <!--<version>2.5.1</version>-->
        <!--</dependency>-->

        <!-- jdbc连接数据库 -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.37</version>
        </dependency>

        <!-- google的json工具包 -->
        <!--<dependency>-->
            <!--<groupId>com.google.code.gson</groupId>-->
            <!--<artifactId>gson</artifactId>-->
            <!--<version>2.3.1</version>-->
        <!--</dependency>-->

        <!-- Servlet-API依赖 -->
        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-web-api</artifactId>
            <version>7.0</version>
            <scope>provided</scope>
        </dependency>

        <!-- JSTL依赖 -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
            <version>1.2</version>
        </dependency>
        <dependency>
            <groupId>taglibs</groupId>
            <artifactId>standard</artifactId>
            <version>1.1.2</version>
        </dependency>

        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>2.6</version>
        </dependency>

    </dependencies>

    <build>
        <plugins>

            <!-- maven子模块rebel.xml自动生成插件 -->
            <plugin>
                <groupId>org.zeroturnaround</groupId>
                <artifactId>jrebel-maven-plugin</artifactId>
                <version>1.1.5</version>
                <executions>
                    <execution>
                        <id>generate-rebel-xml</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- 指定maven编译时的JDK版本插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.5.1</version>
                <configuration>
                    <!--<compilerVersion>${maven.compiler.compilerVersion}</compilerVersion>-->
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                </configuration>
            </plugin>

            <!-- 源代码生成插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <!-- 打包成jar或者war或者其他格式的分发包之前执行maven-source-plugin的goals中定义的命令 -->
                        <phase>prepare-package</phase>
                        <!-- 执行source:jar-no-fork命令，生成源代码的jar包 -->
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>

        <finalName>parent</finalName>
    </build>

</project>
